package com.basicsOOPs;
interface Iter
{
	int i=10;
	void m1();
	void m2();
}
class D1 implements Iter
{

	@Override
	public void m1() {
		System.out.println("m1() method");
	}

	@Override
	public void m2() {
	System.out.println("m2() method ");
	}
}

//marker interface
class WasherMan 
{
	public void wash(Object obj)
	{
		if(obj instanceof Object)
		{
			System.out.println(obj.getClass().getSimpleName()+" is washed .");	
			System.out.println("water pushed with force can wash the "+obj.getClass().getSimpleName());
		}
		else
		{
			System.out.println(obj.getClass().getSimpleName()+" not washable type ");
		}
	}
}
interface Washable
{
	
}
class Car2 implements Washable
{
	
}
public class InterfaceExample {
	public static void main(String[] args) {
		Iter it= new D1();
		it.m1();
		it.m2();
		
		WasherMan wash = new WasherMan();
		wash.wash(new  Car2() );
	}

}
